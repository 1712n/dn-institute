on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  issues: read
  pull-requests: write

jobs:
  
  plagiarism-check:
    runs-on: ubuntu-latest
    name: "Checks a new article from a PR for plagiarism"

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Go to PR files
        run: gh pr checkout "${{ github.event.issue.number }}"
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Save article locally
        id: pr-files
        run: |
          pr_number="${{ github.event.issue.number }}"
          file_path="$(gh pr diff --name-only $pr_number | grep '\.md' | head -n 1)"
          if [ -n "$file_path" ]; then
            cat "$file_path" > article.txt
          else
            echo "No .md file found in the PR." > article.txt
          fi
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: Check for plagiarism
        id: plagiarism-check
        run: |
          content="$(cat article.txt)"
          result="$(curl -X POST "${{ secrets.WORKER_URL }}" -H "Content-Type: application/json" -d "{\"text\": \"$content\"}")"
          results="#Plagiarism Check Results: $result"

          echo "results="$results"" >> "$GITHUB_ENV"
      - name: Post result as a comment
        run: |
          gh pr comment "${{ github.event.issue.number }}" --body "${{ env.results }}"
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
